{
    "type": "object",
    "properties": {
        "Action": {
            "required": true,
            "type": "string"
        },
        "Version": {
            "required": true,
            "type": "string"
        },
        "requestBody": {
            "properties": {
                "AvailabilityZone": {
                    "description": "The Availability Zone in which to create the Capacity Reservation.",
                    "type": "string"
                },
                "ClientToken": {
                    "description": "<p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">How to Ensure Idempotency</a>.</p> <p>Constraint: Maximum 64 ASCII characters.</p>",
                    "type": "string"
                },
                "DryRun": {
                    "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.",
                    "type": "boolean"
                },
                "EbsOptimized": {
                    "description": "Indicates whether the Capacity Reservation supports EBS-optimized instances. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS- optimized instance.",
                    "type": "boolean"
                },
                "EndDate": {
                    "description": "<p>The date and time at which the Capacity Reservation expires. When a Capacity Reservation expires, the reserved capacity is released and you can no longer launch instances into it. The Capacity Reservation's state changes to <code>expired</code> when it reaches its end date and time.</p> <p>You must provide an <code>EndDate</code> value if <code>EndDateType</code> is <code>limited</code>. Omit <code>EndDate</code> if <code>EndDateType</code> is <code>unlimited</code>.</p> <p>If the <code>EndDateType</code> is <code>limited</code>, the Capacity Reservation is cancelled within an hour from the specified time. For example, if you specify 5/31/2019, 13:30:55, the Capacity Reservation is guaranteed to end between 13:30:55 and 14:30:55 on 5/31/2019.</p>",
                    "format": "date-time",
                    "type": "string"
                },
                "EndDateType": {
                    "description": "<p>Indicates the way in which the Capacity Reservation ends. A Capacity Reservation can have one of the following end types:</p> <ul> <li> <p> <code>unlimited</code> - The Capacity Reservation remains active until you explicitly cancel it. Do not provide an <code>EndDate</code> if the <code>EndDateType</code> is <code>unlimited</code>.</p> </li> <li> <p> <code>limited</code> - The Capacity Reservation expires automatically at a specified date and time. You must provide an <code>EndDate</code> value if the <code>EndDateType</code> value is <code>limited</code>.</p> </li> </ul>",
                    "enum": [
                        "unlimited",
                        "limited"
                    ],
                    "type": "string"
                },
                "EphemeralStorage": {
                    "description": "Indicates whether the Capacity Reservation supports instances with temporary, block-level storage.",
                    "type": "boolean"
                },
                "InstanceCount": {
                    "description": "The number of instances for which to reserve capacity.",
                    "type": "integer"
                },
                "InstanceMatchCriteria": {
                    "description": "<p>Indicates the type of instance launches that the Capacity Reservation accepts. The options include:</p> <ul> <li> <p> <code>open</code> - The Capacity Reservation automatically matches all instances that have matching attributes (instance type, platform, and Availability Zone). Instances that have matching attributes run in the Capacity Reservation automatically without specifying any additional parameters.</p> </li> <li> <p> <code>targeted</code> - The Capacity Reservation only accepts instances that have matching attributes (instance type, platform, and Availability Zone), and explicitly target the Capacity Reservation. This ensures that only permitted instances can use the reserved capacity. </p> </li> </ul> <p>Default: <code>open</code> </p>",
                    "enum": [
                        "open",
                        "targeted"
                    ],
                    "type": "string"
                },
                "InstancePlatform": {
                    "description": "The type of operating system for which to reserve capacity.",
                    "enum": [
                        "Linux/UNIX",
                        "Red Hat Enterprise Linux",
                        "SUSE Linux",
                        "Windows",
                        "Windows with SQL Server",
                        "Windows with SQL Server Enterprise",
                        "Windows with SQL Server Standard",
                        "Windows with SQL Server Web",
                        "Linux with SQL Server Standard",
                        "Linux with SQL Server Web",
                        "Linux with SQL Server Enterprise"
                    ],
                    "type": "string"
                },
                "InstanceType": {
                    "description": "The instance type for which to reserve capacity. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html\">Instance Types</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.",
                    "type": "string"
                },
                "TagSpecifications": {
                    "description": "The tags to apply to the Capacity Reservation during launch.",
                    "items": {
                        "description": "The tags to apply to a resource when the resource is being created.",
                        "properties": {
                            "ResourceType": {
                                "description": "The type of resource to tag. Currently, the resource types that support tagging on creation are <code>fleet</code>, <code>dedicated-host</code>, <code>instance</code>, <code>snapshot</code>, and <code>volume</code>. To tag a resource after it has been created, see <a>CreateTags</a>.",
                                "enum": [
                                    "client-vpn-endpoint",
                                    "customer-gateway",
                                    "dedicated-host",
                                    "dhcp-options",
                                    "elastic-ip",
                                    "fleet",
                                    "fpga-image",
                                    "image",
                                    "instance",
                                    "internet-gateway",
                                    "launch-template",
                                    "natgateway",
                                    "network-acl",
                                    "network-interface",
                                    "reserved-instances",
                                    "route-table",
                                    "security-group",
                                    "snapshot",
                                    "spot-instances-request",
                                    "subnet",
                                    "transit-gateway",
                                    "transit-gateway-attachment",
                                    "transit-gateway-route-table",
                                    "volume",
                                    "vpc",
                                    "vpc-peering-connection",
                                    "vpn-connection",
                                    "vpn-gateway"
                                ],
                                "type": "string"
                            },
                            "Tags": {
                                "description": "The tags to apply to the resource.",
                                "items": {
                                    "description": "Describes a tag.",
                                    "properties": {
                                        "Key": {
                                            "description": "<p>The key of the tag.</p> <p>Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with <code>aws:</code>.</p>",
                                            "type": "string"
                                        },
                                        "Value": {
                                            "description": "<p>The value of the tag.</p> <p>Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.</p>",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        },
                        "type": "object"
                    },
                    "type": "array"
                },
                "Tenancy": {
                    "description": "<p>Indicates the tenancy of the Capacity Reservation. A Capacity Reservation can have one of the following tenancy settings:</p> <ul> <li> <p> <code>default</code> - The Capacity Reservation is created on hardware that is shared with other AWS accounts.</p> </li> <li> <p> <code>dedicated</code> - The Capacity Reservation is created on single-tenant hardware that is dedicated to a single AWS account.</p> </li> </ul>",
                    "enum": [
                        "default",
                        "dedicated"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "InstanceType",
                "InstancePlatform",
                "AvailabilityZone",
                "InstanceCount"
            ],
            "type": "object"
        },
        "X_Amz_Content_Sha256": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Date": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Algorithm": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Credential": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Security_Token": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Signature": {
            "required": false,
            "type": "string"
        },
        "X_Amz_SignedHeaders": {
            "required": false,
            "type": "string"
        }
    }
}